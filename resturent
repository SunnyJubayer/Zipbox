<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>ESP Message Controller</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: linear-gradient(to right, #e0f7fa, #f1f8e9);
      padding: 30px;
      color: #333;
    }
    h2, h3 { color: #00796b; }
    .box {
      background: #ffffff;
      border-radius: 10px;
      padding: 20px;
      max-width: 600px;
      margin: 20px auto;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    input, select, textarea {
      padding: 8px;
      width: 100%;
      margin: 10px 0;
      border-radius: 5px;
      border: 1px solid #ccc;
    }
    button {
      padding: 10px;
      background-color: #00796b;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      margin-right: 5px;
    }
    button:hover {
      background-color: #004d40;
    }
    .chat-box {
      background: #e8f5e9;
      padding: 10px;
      border-radius: 5px;
      font-size: 14px;
      max-height: 200px;
      overflow-y: auto;
    }
    .chat-entry {
      border-bottom: 1px dashed #ccc;
      padding: 5px 0;
    }
    .zip-box-entry {
      margin-top: 10px;
      padding: 10px;
      border: 1px dashed #ccc;
      border-radius: 5px;
    }
  </style>
</head>
<body>
<audio id="notifySound" src="https://actions.google.com/sounds/v1/alarms/beep_short.ogg"></audio>

<div class="box" id="loginBox">
  <h2>Login</h2>
  <input type="text" id="username" placeholder="Enter your name">
  <input type="password" id="password" placeholder="Enter password">
  <button onclick="login()">Login</button>
  <br><br>
  <button onclick="guestMode()">Continue as Guest</button>
</div>

<div class="box" id="adminBox" style="display:none;">
  <h2>Admin Dashboard</h2>
  <input type="text" id="msg" placeholder="Enter your message">
  <label><input type="checkbox" id="led" checked> Enable LED</label>
  <label><input type="checkbox" id="buzz" checked> Enable Buzzer</label>
  <select id="ipSelect"></select>
  <button onclick="sendMessage()">Send Message</button>
  <div id="statusMessage" style="margin-top:10px;font-weight:bold;"></div>
  <div class="chat-box" id="adminChatBox">Loading guest chat...</div>
  <button onclick="refreshChat()">üîÅ Refresh Chat</button>
  <button onclick="logout()">üö™ Logout</button>
</div>

<div class="box" id="addBox" style="display:none;">
  <h3>‚ûï Add New ZIP BOX (Table)</h3>
  <input type="text" id="tableLabel" placeholder="Table name (e.g., Table 3)">
  <input type="text" id="tableIP" placeholder="ESP IP (e.g., 192.168.0.105)">
  <button onclick="addESP()">Add ZIP BOX</button>
  <div id="zipBoxList"></div>
</div>

<div class="box" id="guestBox" style="display:none;">
  <h2>Rate Today's Food</h2>
  <input type="number" id="stars" min="1" max="5" placeholder="Rate 1 to 5">
  <button onclick="submitRating()">Submit Rating</button>
  <hr>
  <h3>Message to Admin</h3>
  <input type="text" id="guestTable" placeholder="Enter your table number">
  <textarea id="guestMsg" placeholder="Write a message to admin..."></textarea>
  <button onclick="sendGuestMsg()">Send</button>
  <div id="guestStatus" style="margin-top:10px;font-weight:bold;"></div>
  <button onclick="logout()">üîô Back</button>
</div>

<script>
let espList = [];
let lastMessageIDs = new Set();
const guestESPIP = "192.168.0.102";

function login() {
  const user = document.getElementById("username").value.toLowerCase();
  const pass = document.getElementById("password").value;
  if (user === "admin" && pass === "admin123") {
    document.getElementById("loginBox").style.display = "none";
    document.getElementById("adminBox").style.display = "block";
    document.getElementById("addBox").style.display = "block";
    loadESPList();
    refreshChat();
  } else {
    alert("Redirecting to guest mode.");
    guestMode();
  }
}

function guestMode() {
  document.getElementById("loginBox").style.display = "none";
  document.getElementById("guestBox").style.display = "block";
}

function logout() {
  document.getElementById("adminBox").style.display = "none";
  document.getElementById("guestBox").style.display = "none";
  document.getElementById("addBox").style.display = "none";
  document.getElementById("loginBox").style.display = "block";
}

function addESP() {
  const label = document.getElementById("tableLabel").value.trim();
  const ip = document.getElementById("tableIP").value.trim();
  if (!label || !ip) return alert("Fill in both table name and IP address.");
  espList.push({ label, ip });
  saveAndRenderESPList();
  document.getElementById("tableLabel").value = "";
  document.getElementById("tableIP").value = "";
}

function editESP(index) {
  const newLabel = prompt("Edit Table Name:", espList[index].label);
  const newIP = prompt("Edit IP Address:", espList[index].ip);
  if (newLabel && newIP) {
    espList[index].label = newLabel;
    espList[index].ip = newIP;
    saveAndRenderESPList();
  }
}

function deleteESP(index) {
  if (confirm("Are you sure you want to delete this ZIP BOX?")) {
    espList.splice(index, 1);
    saveAndRenderESPList();
  }
}

function saveAndRenderESPList() {
  localStorage.setItem("espList", JSON.stringify(espList));
  updateDropdown();
  renderESPList();
}

function loadESPList() {
  const stored = localStorage.getItem("espList");
  espList = stored ? JSON.parse(stored) : [];
  updateDropdown();
  renderESPList();
}

function updateDropdown() {
  const select = document.getElementById("ipSelect");
  select.innerHTML = "";
  espList.forEach(entry => {
    const opt = document.createElement("option");
    opt.value = entry.ip;
    opt.textContent = `${entry.label} (${entry.ip})`;
    select.appendChild(opt);
  });
}

function renderESPList() {
  const container = document.getElementById("zipBoxList");
  container.innerHTML = "";
  espList.forEach((entry, index) => {
    const div = document.createElement("div");
    div.className = "zip-box-entry";
    div.innerHTML = `
      <strong>${entry.label}</strong> - ${entry.ip}<br>
      <button onclick="editESP(${index})">Edit</button>
      <button onclick="deleteESP(${index})">Delete</button>
    `;
    container.appendChild(div);
  });
}

function sendMessage() {
  const msg = document.getElementById("msg").value;
  const led = document.getElementById("led").checked;
  const buzz = document.getElementById("buzz").checked;
  const ip = document.getElementById("ipSelect").value;
  const statusDiv = document.getElementById("statusMessage");
  if (!msg) return showStatus("‚ùå Enter a message.", "red");
  const url = `http://${ip}/message?text=${encodeURIComponent(msg)}${led ? "&led=1" : ""}${buzz ? "&buzz=1" : ""}`;
  fetch(url)
    .then(() => showStatus("‚úÖ Message sent.", "green"))
    .catch(() => showStatus("‚ùå Failed to send.", "red"));
}

function showStatus(msg, color) {
  const div = document.getElementById("statusMessage");
  div.innerHTML = msg;
  div.style.color = color;
  setTimeout(() => div.innerHTML = "", 5000);
}

function sendGuestMsg() {
  const msg = document.getElementById("guestMsg").value;
  const table = document.getElementById("guestTable").value;
  const guestStatus = document.getElementById("guestStatus");
  if (!msg || !table) return showGuestStatus("‚ùó Fill in table and message.", "red");
  fetch(`http://${guestESPIP}/send_from_guest?msg=${encodeURIComponent(msg)}&table=${encodeURIComponent(table)}`)
    .then(() => {
      document.getElementById("guestMsg").value = "";
      showGuestStatus("‚úÖ Message sent.", "green");
    })
    .catch(() => showGuestStatus("‚ùå Failed to send.", "red"));
}

function showGuestStatus(msg, color) {
  const div = document.getElementById("guestStatus");
  div.innerHTML = msg;
  div.style.color = color;
  setTimeout(() => div.innerHTML = "", 5000);
}

function refreshChat() {
  if (espList.length === 0) return;
  fetch(`http://${espList[0].ip}/get_chat`)
    .then(res => res.json())
    .then(data => {
      const box = document.getElementById("adminChatBox");
      box.innerHTML = "";
      const newIDs = new Set();

      if (Array.isArray(data) && data.length > 0) {
        data.forEach(entry => {
          const messageID = entry.table + entry.guest;
          newIDs.add(messageID);
          const div = document.createElement("div");
          div.className = "chat-entry";
          div.innerHTML = `<strong>Table:</strong> ${entry.table}<br><strong>Message:</strong> ${entry.guest}`;
          box.appendChild(div);
        });

        const isNew = [...newIDs].some(id => !lastMessageIDs.has(id));
        if (isNew) document.getElementById("notifySound").play();
        lastMessageIDs = newIDs;
      } else {
        box.innerHTML = "‚ÑπÔ∏è No guest messages.";
      }
    })
    .catch(() => {
      document.getElementById("adminChatBox").textContent = "‚ö†Ô∏è Failed to load guest message.";
    });
}

setInterval(refreshChat, 3000);
</script>

</body>
</html>
